"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка:
    сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
    с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, data):
        """ :param data: list of lists of integers - [[n1,..,nN], ... ,[n1,..,nN]] """
        self.__matrix_data = data

    def __str__(self):
        s_mtrx = ''
        for row in self.__matrix_data:
            s_mtrx += ''.join([f'{e:>5}' for e in row]) + '\n'
        return s_mtrx

    def __add__(self, other):
        rows = len(self.__matrix_data)
        cols = len(self.__matrix_data[0])
        new_data = []
        for r in range(rows):
            new_data.append(
                [self.__matrix_data[r][c] + other.__matrix_data[r][c] for c in range(cols)]
            )
        return Matrix(new_data)

# ------------------------------------------


a = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
b = Matrix([[6, 6, 6], [0, 0, 0], [-6, -6, -6]])
print(a)
print(b)
print(a + b)
